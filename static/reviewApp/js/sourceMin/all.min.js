angular.module("MassAutoComplete",[]).directive("massAutocomplete",["$timeout","$window","$document","$q",function($timeout,$window,$document,$q){"use strict";return{restrict:"A",scope:{options:"&massAutocomplete"},transclude:!0,template:'<span ng-transclude></span><div class="suggestion-menu-position ac-container" ng-show="show_autocomplete && results.length > 0"><ul class="ac-menu"><li ng-repeat="result in results" ng-if="$index > 0" class="ac-menu-item suggestion-item-top" ng-class="$index == selected_index ? \'ac-state-focus\': \'\'"><span ng-click="apply_selection($index)"><a href  class="suggestion-name-position" ng-bind-html="result.name"></a><a href class="suggestion-type-position" ng-bind-html="result.type"></a></span></li></ul></div>',link:function(scope,element){scope.container=angular.element(element[0].getElementsByClassName("ac-container")[0])},controller:["$scope","$rootScope",function($scope,$rootScope){function debounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments,later=function(){timeout=null,immediate||func.apply(context,args)},callNow=immediate&&!timeout;clearTimeout(timeout),timeout=setTimeout(later,wait),callNow&&func.apply(context,args)}}function _position_autocomplete(){var rect=current_element[0].getBoundingClientRect(),scrollTop=$document[0].body.scrollTop||$document[0].documentElement.scrollTop||$window.pageYOffset,scrollLeft=$document[0].body.scrollLeft||$document[0].documentElement.scrollLeft||$window.pageXOffset,container=$scope.container[0];container.style.top=rect.top+rect.height+scrollTop+"px",container.style.left=rect.left+scrollLeft+"px",container.style.width=rect.width+"px"}function _attach(ngmodel,target_element,options){current_element!==target_element&&(current_element&&that.detach(),target_element[0]===$document[0].activeElement&&(options.on_attach&&options.on_attach(),current_element=target_element,current_model=ngmodel,current_options=options,previous_value=ngmodel.$viewValue,$scope.results=[],$scope.selected_index=-1,bind_element(),value_watch=$scope.$watch(function(){return ngmodel.$modelValue},function(nv,ov){nv!==last_selected_value&&(_position_autocomplete(),suggest(nv,current_element))})))}function _suggest(term,target_element){$scope.selected_index=0,$scope.waiting_for_suggestion=!0,"string"==typeof term&&term.length>0?$q.when(current_options.suggest(term),function(suggestions){current_element&&current_element===target_element&&(suggestions&&suggestions.length>0?($scope.results=[{name:term}].concat(suggestions),$scope.show_autocomplete=!0,current_options.auto_select_first&&set_selection(1)):$scope.results=[])},function(error){$scope.show_autocomplete=!1,current_options.on_error&&current_options.on_error(error)})["finally"](function(){$scope.waiting_for_suggestion=!1}):($scope.waiting_for_suggestion=!1,$scope.show_autocomplete=!1,$scope.$apply())}function update_model_value(value){current_model.$modelValue!==value&&(current_model.$setViewValue(value),current_model.$render())}function set_selection(i){var selected=$scope.results[i];return current_element.val(selected.name),$scope.selected_index=i,selected}function bind_element(){angular.element($window).bind(EVENTS.RESIZE,position_autocomplete),bound_events[EVENTS.BLUR]=function(){$timeout(function(){current_element&&current_element[0]===$document[0].activeElement||that.detach()},user_options.debounce_blur)},current_element.bind(EVENTS.BLUR,bound_events[EVENTS.BLUR]),bound_events[EVENTS.KEYDOWN]=function(e){if(!e.shiftKey)switch(e.keyCode){case KEYS.ESC:$scope.show_autocomplete?($scope.show_autocomplete=!1,$scope.$apply()):current_element.val(previous_value);break;case KEYS.ENTER:$scope.show_autocomplete&&$scope.selected_index>0&&!$scope.waiting_for_suggestion&&($scope.apply_selection($scope.selected_index),e.stopPropagation(),e.preventDefault()),$scope.show_autocomplete=!1,$scope.$apply();break;case KEYS.TAB:if(!$scope.show_autocomplete)break;e.preventDefault();case KEYS.DOWN:$scope.results.length>0&&($scope.show_autocomplete?(console.log("selected index: ",$scope.selected_index),set_selection($scope.selected_index+1>$scope.results.length-1?0:$scope.selected_index+1)):($scope.show_autocomplete=!0,$scope.selected_index=0),$scope.$apply());break;case KEYS.UP:$scope.show_autocomplete&&(e.preventDefault(),set_selection($scope.selected_index-1>=0?$scope.selected_index-1:$scope.results.length-1),$scope.$apply())}},current_element.bind(EVENTS.KEYDOWN,bound_events[EVENTS.KEYDOWN])}var that=this,KEYS={TAB:9,ESC:27,ENTER:13,UP:38,DOWN:40},EVENTS={KEYDOWN:"keydown",RESIZE:"resize",BLUR:"blur"},bound_events={};bound_events[EVENTS.BLUR]=null,bound_events[EVENTS.KEYDOWN]=null,bound_events[EVENTS.RESIZE]=null;var current_element,current_model,current_options,previous_value,value_watch,last_selected_value,_user_options=$scope.options()||{},user_options={debounce_position:_user_options.debounce_position||150,debounce_attach:_user_options.debounce_attach||300,debounce_suggest:_user_options.debounce_suggest||200,debounce_blur:_user_options.debounce_blur||150};$scope.show_autocomplete=!1;var position_autocomplete=debounce(_position_autocomplete,user_options.debounce_position);that.attach=debounce(_attach,user_options.debounce_attach);var suggest=debounce(_suggest,user_options.debounce_suggest);that.detach=function(){if(current_element){var value=current_element.val();update_model_value(value),current_options.on_detach&&current_options.on_detach(value),current_element.unbind(EVENTS.KEYDOWN,bound_events[EVENTS.KEYDOWN]),current_element.unbind(EVENTS.BLUR,bound_events[EVENTS.BLUR])}$scope.show_autocomplete=!1,angular.element($window).unbind(EVENTS.RESIZE,bound_events[EVENTS.RESIZE]),value_watch&&value_watch(),$scope.selected_index=$scope.results=void 0,current_model=current_element=previous_value=void 0},$scope.apply_selection=function(i){if(current_element[0].focus(),!(!$scope.show_autocomplete||i>$scope.results.length||0>i)){$rootScope.setSelectedRecordData($scope.results[i]);var selected=set_selection(i);last_selected_value=selected.name,update_model_value(selected.name),$scope.show_autocomplete=!1,current_options.on_select&&current_options.on_select(selected)}},$scope.$on("$destroy",function(){that.detach(),$scope.container.remove()})}]}}]).directive("massAutocompleteItem",function(){"use strict";return{restrict:"A",require:["^massAutocomplete","ngModel"],scope:{massAutocompleteItem:"&"},link:function(scope,element,attrs,required){attrs.$set("autocomplete","off"),element.bind("focus",function(){var options=scope.massAutocompleteItem();if(!options)throw"Invalid options";required[0].attach(required[1],element,options)})}}}),angular.module("starRating",[]).directive("starRating",function(){return{restrict:"A",template:'<ul class="rating">	<li ng-repeat="star in stars" ng-class="star" ng-click="toggle($index)">â˜…</li></ul>',scope:{ratingValue:"=",max:"=",onRatingSelected:"&"},link:function(scope,elem,attrs){var updateStars=function(){scope.stars=[];for(var i=0;i<scope.max;i++)scope.stars.push({filled:i<scope.ratingValue})};scope.toggle=function(index){scope.ratingValue=index+1,scope.onRatingSelected({rating:index+1})},scope.$watch("ratingValue",function(oldVal,newVal){newVal&&updateStars()})}}});var searchReviewApp=angular.module("mainCollegeApp.searchReview",["MassAutoComplete"]);searchReviewApp.controller("searchReviewCtrl",function($scope,$rootScope,HTTPService,utilityService,$location){function suggest_state(term){for(var q=term.toLowerCase().trim(),results=[],i=0;i<$scope.acadamies.length&&results.length<10;i++){var acadamy=$scope.acadamies[i];0===acadamy.name.toLowerCase().indexOf(q)&&results.push(acadamy)}return console.log(results),results}$scope.searchQuery="",$scope.selectedRecord="",$scope.acadamies="",$scope.autocomplete_options={suggest:suggest_state},$rootScope.setSelectedRecordData=function(selectedItem){$scope.selectedRecord=selectedItem},$scope.getRecords=function(searchQuery){if(""!=searchQuery){var formData=utilityService.objectToRequestData({name_prefix:searchQuery});HTTPService.POSTRequest("/review/search/",formData,"getAllAcademyDetails")}},$scope.goToAcadamyPage=function(selectedRecord){console.log("selected record: ",selectedRecord),$location.path("/review/"+selectedRecord.type+"/"+selectedRecord.id)},$scope.$on("getAllAcademyDetailsSuccess",function(event,response){console.log("Response: ",response.data.data.academies),$scope.acadamies=response.data.data.academies}),$scope.$on("getAllAcademyDetailsError",function(event,response){})});var collegeReviewApp=angular.module("mainCollegeApp.collegeReview",["starRating"]);collegeReviewApp.controller("collegeReviewCtrl",function($scope,HTTPService,utilityService,$stateParams){$scope.collegeID=$stateParams.acadamyID,$scope.collegeJSONData={user_id:"",college_id:$scope.collegeID,college_name:"",state_name:"",course:"",entrance:"",rank:"",pass_out_year:"",fee:"",review:"",accommodation:1,infrastructure:1,faculties:1,placement:1,social_life:1},$scope.collegeNameError=!1,$scope.courseError=!1,$scope.entranceError=!1,$scope.rankError=!1,$scope.passOutYearError=!1,$scope.collegeFeeError=!1,$scope.collegeFeeFocus=!1,$scope.passOutYearFocus=!1,$scope.rankFocus=!1,$scope.entranceFocus=!1,$scope.courseFocus=!1,$scope.collegeNameFocus=!1,$scope.prepareCollegeJSONData=function(jsonData){return $scope.collegeJSONData.accommodation=jsonData.accommodation.toString(),$scope.collegeJSONData.infrastructure=jsonData.infrastructure.toString(),$scope.collegeJSONData.faculties=jsonData.faculties.toString(),$scope.collegeJSONData.placement=jsonData.placement.toString(),$scope.collegeJSONData.social_life=jsonData.social_life.toString(),$scope.collegeJSONData},$scope.validateCollegeName=function(collegeName){return utilityService.validateText(collegeName,"COLLEGE REVIEW COLLEGE NAME VALIDATION")?($scope.collegeNameError=!1,$scope.collegeNameFocus=!1,!0):($scope.collegeNameError=!0,$scope.collegeNameFocus=!0,!1)},$scope.validateCourse=function(course){return utilityService.validateText(course,"COLLEGE REVIEW COURSE VALIDATION")?($scope.courseError=!1,$scope.courseFocus=!1,!0):($scope.courseError=!0,$scope.courseFocus=!0,!1)},$scope.validateEntrance=function(entrance){return utilityService.validateText(entrance,"COLLEGE REVIEW ENTRANCE VALIDATION")?($scope.entranceError=!1,$scope.entranceFocus=!1,!0):($scope.entranceError=!0,$scope.entranceFocus=!0,!1)},$scope.validateRank=function(rank){return utilityService.validateText(rank,"COLLEGE RANK VALIDATION")?($scope.rankError=!1,$scope.rankFocus=!1,!0):($scope.rankError=!0,$scope.rankFocus=!0,!1)},$scope.validatePassOutYear=function(passOutYear){return utilityService.validateText(passOutYear,"SCHOOL BOARD VALIDATION")?($scope.passOutYearError=!1,$scope.passOutYearFocus=!1,!0):($scope.passOutYearError=!0,$scope.passOutYearFocus=!0,!1)},$scope.validateFee=function(fee){return utilityService.validateText(fee,"COLLEGE FEE VALIDATION")?($scope.collegeFeeError=!1,$scope.collegeFeeFocus=!1,!0):($scope.collegeFeeError=!0,$scope.collegeFeeFocus=!0,!1)},$scope.validateCollegeJSONData=function(jsonData){return $scope.validateCollegeName(jsonData.college_name)&&$scope.validateCourse(jsonData.course)&&$scope.validateEntrance(jsonData.entrance)&&$scope.validateRank(jsonData.rank)&&$scope.validatePassOutYear(jsonData.pass_out_year)&&$scope.validateFee(jsonData.fee)?(jsonData=$scope.prepareCollegeJSONData(jsonData),!0):!1},HTTPService.GETRequest("/college/"+$scope.collegeID+"/","","getCollegeRecord"),$scope.submitCollegeReview=function(collegeJSONData){if($scope.validateCollegeJSONData(collegeJSONData)){var formData=utilityService.objectToRequestData({jsonData:encodeURIComponent(JSON.stringify(collegeJSONData))});HTTPService.POSTRequest("/review/college/",formData,"collegeReview")}},$scope.$on("collegeReviewSuccess",function(event,response){}),$scope.$on("collegeReviewError",function(event,response){}),$scope.$on("getCollegeRecordSuccess",function(event,response){$scope.collegeJSONData.college_name=response.data.data.college_name}),$scope.$on("getCollegeRecordError",function(event,response){})});var schoolReviewApp=angular.module("mainCollegeApp.schoolReview",["starRating"]);schoolReviewApp.controller("schoolReviewCtrl",function($scope,HTTPService,utilityService,$stateParams){console.log("Acadamy id: ",$stateParams.acadamyID),$scope.schoolID=$stateParams.acadamyID,$scope.schoolJSONData={user_id:"",school_id:$scope.schoolID,school_name:"",state_name:"","class":"",stream:"",board:"",year:"",fee:"",review:"",faculties:1,infrastructure:1,facilities:1,extra_curriculum:1,social_life:1},$scope.schoolNameError=!1,$scope.classNameError=!1,$scope.streamNameError=!1,$scope.yearError=!1,$scope.boardError=!1,$scope.feeError=!1,$scope.feeFocus=!1,$scope.boardFocus=!1,$scope.yearFocus=!1,$scope.streamNameFocus=!1,$scope.classNameFocus=!1,$scope.schoolNameFocus=!1,$scope.prepareSchoolJSONData=function(jsonData){return $scope.schoolJSONData.faculties=jsonData.faculties.toString(),$scope.schoolJSONData.infrastructure=jsonData.infrastructure.toString(),$scope.schoolJSONData.facilities=jsonData.facilities.toString(),$scope.schoolJSONData.extra_curriculum=jsonData.extra_curriculum.toString(),$scope.schoolJSONData.social_life=jsonData.social_life.toString(),$scope.schoolJSONData},$scope.validateSchoolName=function(schoolName){return utilityService.validateText(schoolName,"SCHOOL REVIEW SCHOOL NAME VALIDATION")?($scope.schoolNameError=!1,$scope.schoolNameFocus=!1,!0):($scope.schoolNameError=!0,$scope.schoolNameFocus=!0,!1)},$scope.validateClass=function(className){return utilityService.validateText(className,"SCHOOL REVIEW CLASS VALIDATION")?($scope.classNameError=!1,$scope.classNameFocus=!1,!0):($scope.classNameError=!0,$scope.classNameFocus=!0,!1)},$scope.validateStream=function(stream){return utilityService.validateText(stream,"SCHOOL REVIEW STREAM VALIDATION")?($scope.streamNameError=!1,$scope.streamNameFocus=!1,!0):($scope.streamNameError=!0,$scope.streamNameFocus=!0,!1)},$scope.validateYear=function(year){return utilityService.validateText(year,"SCHOOL YEAR VALIDATION")?($scope.yearError=!1,$scope.yearFocus=!1,!0):($scope.yearError=!0,$scope.yearFocus=!0,!1)},$scope.validateBoard=function(board){return utilityService.validateText(board,"SCHOOL BOARD VALIDATION")?($scope.boardError=!1,$scope.boardFocus=!1,!0):($scope.boardError=!0,$scope.boardFocus=!0,!1)},$scope.validateFee=function(fee){return utilityService.validateText(fee,"SCHOOL FEE VALIDATION")?($scope.feeError=!1,$scope.feeFocus=!1,!0):($scope.feeError=!0,$scope.feeFocus=!0,!1)},$scope.validateSchoolJSONData=function(jsonData){return $scope.validateSchoolName(jsonData.school_name)&&$scope.validateClass(jsonData["class"])&&$scope.validateStream(jsonData.stream)&&$scope.validateYear(jsonData.year)&&$scope.validateBoard(jsonData.board)&&$scope.validateFee(jsonData.fee)?(jsonData=$scope.prepareSchoolJSONData(jsonData),!0):!1},HTTPService.GETRequest("/school/"+$scope.schoolID+"/","","getSchoolRecord"),$scope.submitSchoolReview=function(schoolJSONData){if($scope.validateSchoolJSONData(schoolJSONData)){var formData=utilityService.objectToRequestData({jsonData:encodeURIComponent(JSON.stringify(schoolJSONData))});HTTPService.POSTRequest("/review/school/",formData,"schoolReview")}},$scope.$on("schoolReviewSuccess",function(event,response){console.log("Response: ",response)}),$scope.$on("schoolReviewError",function(event,response){}),$scope.$on("getSchoolRecordSuccess",function(event,response){console.log("Respons: ",response.data.data.school_name),$scope.schoolJSONData.school_name=response.data.data.school_name}),$scope.$on("getSchoolRecordError",function(event,response){})});var instituteReviewApp=angular.module("mainCollegeApp.instituteReview",[]);instituteReviewApp.controller("instituteReviewCtrl",function($scope,HTTPService,utilityService,$stateParams){$scope.coachingID=$stateParams.acadamyID,$scope.coachingJSONData={user_id:"",institute_id:$scope.coachingID,institute_name:"",state_name:"",course:"",year_of_batch:"",fee:"",review:"",faculties:1,administration:1,alumni:1,atmosphere:1},$scope.instituteNameError=!1,$scope.coursesError=!1,$scope.yearOfBatchError=!1,$scope.instituteFeeError=!1,$scope.instituteFeeFocus=!1,$scope.yearOfBatchFocus=!1,$scope.coursesFocus=!1,$scope.instituteNameFocus=!1,$scope.prepareInstituteJSONData=function(jsonData){return $scope.coachingJSONData.faculties=jsonData.faculties.toString(),$scope.coachingJSONData.administration=jsonData.administration.toString(),$scope.coachingJSONData.alumni=jsonData.alumni.toString(),$scope.coachingJSONData.atmosphere=jsonData.atmosphere.toString(),$scope.coachingJSONData},$scope.validateInstituteName=function(instituteName){return utilityService.validateText(instituteName,"INSTITUTE REVIEW INSTITUTE NAME VALIDATION")?($scope.instituteNameError=!1,$scope.instituteNameFocus=!1,!0):($scope.instituteNameError=!0,$scope.instituteNameFocus=!0,!1)},$scope.validateCourses=function(courses){return utilityService.validateText(courses,"INSTITUTE REVIEW COURSES VALIDATION")?($scope.coursesError=!1,$scope.coursesFocus=!1,!0):($scope.coursesError=!0,$scope.coursesFocus=!0,!1)},$scope.validateYearOfBatch=function(yearOfBatch){return utilityService.validateText(yearOfBatch,"INSTITUTE YEAR OF BATCH VALIDATION")?($scope.yearOfBatchError=!1,$scope.yearOfBatchFocus=!1,!0):($scope.yearOfBatchError=!0,$scope.yearOfBatchFocus=!0,!1)},$scope.validateInstituteFee=function(fee){return utilityService.validateText(fee,"INSTITUTE FEE VALIDATION")?($scope.instituteFeeError=!1,$scope.instituteFeeFocus=!1,!0):($scope.instituteFeeError=!0,$scope.instituteFeeFocus=!0,!1)},$scope.validateInstituteJSONData=function(jsonData){return $scope.validateInstituteName(jsonData.institute_name)&&$scope.validateCourses(jsonData.course)&&$scope.validateYearOfBatch(jsonData.year_of_batch)&&$scope.validateInstituteFee(jsonData.fee)?(jsonData=$scope.prepareInstituteJSONData(jsonData),!0):!1},HTTPService.GETRequest("/coaching/"+$scope.coachingID+"/","","getCoachingRecord"),$scope.submitCoachingReview=function(coachingJSONData){if($scope.validateInstituteJSONData(coachingJSONData)){var formData=utilityService.objectToRequestData({jsonData:encodeURIComponent(JSON.stringify(coachingJSONData))});HTTPService.POSTRequest("/review/coaching/",formData,"coachingReview")}},$scope.$on("coachingReviewSuccess",function(event,response){console.log("Response: ",response)}),$scope.$on("coachingReviewError",function(event,response){}),$scope.$on("getCoachingRecordSuccess",function(event,response){$scope.coachingJSONData.institute_name=response.data.data.institute_name}),$scope.$on("getCoachingRecordError",function(event,response){})});